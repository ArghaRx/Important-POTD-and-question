---> standare positive array[] = each ith index should be present (i + 1) term / element.
---> nums[] = {1,2,3,4,5,6,7,8,9 ...}

TC - O(N + N)
SC - O(1)



class Solution {
    public int firstMissingPositive(int[] nums) {
        int n = nums.length, i = 0;
        while(i < n)
        {
            int correctIndex = nums[i] - 1;
            if(nums[i] > 0 && nums[i] <= n && nums[i] != nums[correctIndex])  // edge case for element getting -ve and over the length and the above case
            swap(nums, i, correctIndex);
            else
            i++; 
        }
        for(i = 0; i < n; i++)
        {
            if(nums[i] != i + 1)
            return i + 1;
        }

        return n + 1;
    }
    public void swap(int nums[], int i, int j)
    {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
